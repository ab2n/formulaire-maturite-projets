import streamlit as st

st.set_page_config(page_title="Checklist Interactive", layout="centered")
st.title("üìã Checklist Interactive - Maturit√© de votre projet")

questions = [
    "Je sais pr√©cis√©ment pourquoi je veux lancer cette campagne et quel montant je souhaite atteindre",
    "J‚Äôai une pr√©sentation claire, inspirante et convaincante de mon projet, avec une histoire qui donne envie de contribuer",
    "Je connais mon ‚Äú1er cercle‚Äù (amis, famille, partenaires proches) et je sais comment le solliciter d√®s le lancement",
    "J‚Äôai les ressources humaines et techniques pour mener √† bien ma campagne",
    "J‚Äôai d√©j√† pr√©vu un calendrier et des supports de communication (posts r√©seaux sociaux, mails, visuels, vid√©o)",
    "Je sais quelles plateformes correspondent le mieux √† mon projet et √† mon public cible",
    "J‚Äôai identifi√© des contreparties attractives, coh√©rentes avec mon projet et adapt√©es √† mon public",
    "Je sais comment remercier, fid√©liser et tenir inform√©s mes contributeurs une fois la campagne termin√©e",
    "Mon projet a le potentiel pour embarquer les citoyens"
]

st.write("## √âvaluez chaque point selon votre pr√©paration (0 = pas du tout, 5 = parfaitement)")

responses = []
for q in questions:
    response = st.slider(q, min_value=0, max_value=5, value=0, step=1)
    responses.append(response)

# Calcul du score total et typologie
total_score = sum(responses)
max_score = len(questions) * 5
average_score = total_score / len(questions)  # moyenne par question

# D√©finition des typologies
if average_score <= 1:
    maturity = "D√©butant"
elif average_score <= 2:
    maturity = "√âmergent"
elif average_score <= 3:
    maturity = "En progression"
elif average_score <= 4:
    maturity = "Bien pr√©par√©"
else:
    maturity = "Pr√™t √† lancer"

st.write("---")
st.subheader("üöÄ Votre typologie de maturit√©")
st.info(f"Votre projet est : **{maturity}** (score moyen : {average_score:.1f}/5)")

# Visualisation simple
st.bar_chart(responses)
