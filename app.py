import streamlit as st
import plotly.graph_objects as go

st.set_page_config(page_title="Checklist Interactive", layout="centered")
st.title("üìã Checklist Interactive - Maturit√© de votre projet")

# Questions originales
questions = [
    "Je sais pr√©cis√©ment pourquoi je veux lancer cette campagne et quel montant je souhaite atteindre",
    "J‚Äôai une pr√©sentation claire, inspirante et convaincante de mon projet, avec une histoire qui donne envie de contribuer",
    "Je connais mon ‚Äú1er cercle‚Äù (amis, famille, partenaires proches) et je sais comment le solliciter d√®s le lancement",
    "J‚Äôai les ressources humaines et techniques pour mener √† bien ma campagne",
    "J‚Äôai d√©j√† pr√©vu un calendrier et des supports de communication (posts r√©seaux sociaux, mails, visuels, vid√©o)",
    "Je sais quelles plateformes correspondent le mieux √† mon projet et √† mon public cible",
    "J‚Äôai identifi√© des contreparties attractives, coh√©rentes avec mon projet et adapt√©es √† mon public",
    "Je sais comment remercier, fid√©liser et tenir inform√©s mes contributeurs une fois la campagne termin√©e",
    "Mon projet a le potentiel pour embarquer les citoyens"
]

st.write("## √âvaluez chaque point selon votre pr√©paration (0 = pas du tout, 5 = parfaitement)")

responses = []
for q in questions:
    response = st.slider(q, min_value=0, max_value=5, value=0, step=1)
    responses.append(response)

# Calcul du score moyen
average_score = sum(responses) / len(questions)

# Typologie et commentaires associ√©s
if average_score <= 1:
    maturity = "D√©butant"
    comment = "Votre projet est encore au stade initial. Il est recommand√© de clarifier vos objectifs et de renforcer vos fondamentaux avant de lancer une campagne."
    resources = [
        ("Guide pour d√©butants", "https://example.com/debutant-guide"),
        ("Checklist de pr√©paration", "https://example.com/debutant-checklist")
    ]
elif average_score <= 2:
    maturity = "√âmergent"
    comment = "Votre projet commence √† prendre forme mais plusieurs aspects restent √† consolider. Travaillez sur votre pr√©sentation et votre r√©seau de contacts."
    resources = [
        ("Atelier planification", "https://example.com/emergent-atelier"),
        ("Mod√®les de campagne", "https://example.com/emergent-modeles")
    ]
elif average_score <= 3:
    maturity = "En progression"
    comment = "Votre projet est en bonne voie. Il vous reste √† finaliser certains √©l√©ments pour √™tre totalement pr√™t √† lancer."
    resources = [
        ("Optimisation de campagne", "https://example.com/progression-optimisation"),
        ("Exemples de succ√®s", "https://example.com/progression-exemples")
    ]
elif average_score <= 4:
    maturity = "Bien pr√©par√©"
    comment = "Votre projet est bien structur√© et pr√™t pour le lancement. Quelques ajustements mineurs pourraient le rendre encore plus solide."
    resources = [
        ("Strat√©gies avanc√©es", "https://example.com/bienprepare-strategies"),
        ("Checklist finale", "https://example.com/bienprepare-checklist")
    ]
else:
    maturity = "Pr√™t √† lancer"
    comment = "F√©licitations ! Votre projet est pr√™t √† √™tre lanc√©. Pensez √† suivre vos contributeurs et √† maintenir la communication apr√®s la campagne."
    resources = [
        ("Lancement et suivi", "https://example.com/pret-lancer-lancement"),
        ("Outils de fid√©lisation", "https://example.com/pret-lancer-outils")
    ]

st.write("---")
st.subheader("üöÄ Votre typologie de maturit√©")
st.info(f"**{maturity}** (score moyen : {average_score:.1f}/5)")
st.write(comment)

# Affichage des ressources
st.write("### üìö Ressources recommand√©es pour vous")
for title, url in resources:
    st.markdown(f"- [{title}]({url})")

# Diagramme radar
fig = go.Figure()
fig.add_trace(go.Scatterpolar(
    r=responses + [responses[0]],  # boucle pour le radar
    theta=questions + [questions[0]],
    fill='toself',
    name='Maturit√©'
))
fig.update_layout(
    polar=dict(
        radialaxis=dict(
            visible=True,
            range=[0,5]
        )),
    showlegend=False
)
st.plotly_chart(fig, use_container_width=True)
